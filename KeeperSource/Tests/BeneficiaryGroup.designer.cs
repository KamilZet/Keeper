#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tests
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MCM_Keeper")]
	public partial class BeneficiaryGroupDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIdentityCardType(IdentityCardType instance);
    partial void UpdateIdentityCardType(IdentityCardType instance);
    partial void DeleteIdentityCardType(IdentityCardType instance);
    partial void InsertBeneficiary(Beneficiary instance);
    partial void UpdateBeneficiary(Beneficiary instance);
    partial void DeleteBeneficiary(Beneficiary instance);
    partial void InsertBeneficiaryGroupId(BeneficiaryGroupId instance);
    partial void UpdateBeneficiaryGroupId(BeneficiaryGroupId instance);
    partial void DeleteBeneficiaryGroupId(BeneficiaryGroupId instance);
    #endregion
		
		public BeneficiaryGroupDataContext() : 
				base(global::Tests.Properties.Settings.Default.MCM_KeeperConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BeneficiaryGroupDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BeneficiaryGroupDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BeneficiaryGroupDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BeneficiaryGroupDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BeneficiaryGroupDetail> BeneficiaryGroupDetails
		{
			get
			{
				return this.GetTable<BeneficiaryGroupDetail>();
			}
		}
		
		public System.Data.Linq.Table<IdentityCardType> IdentityCardTypes
		{
			get
			{
				return this.GetTable<IdentityCardType>();
			}
		}
		
		public System.Data.Linq.Table<Beneficiary> Beneficiaries
		{
			get
			{
				return this.GetTable<Beneficiary>();
			}
		}
		
		public System.Data.Linq.Table<BeneficiaryGroupId> BeneficiaryGroupIds
		{
			get
			{
				return this.GetTable<BeneficiaryGroupId>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Interface.GetEmployees")]
		public ISingleResult<GetEmployeesResult> GetEmployees()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetEmployeesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Benefits.BeneficiaryGroupDetails")]
	public partial class BeneficiaryGroupDetail
	{
		
		private int _BeneficiaryGroupID;
		
		private int _BeneficiaryID;
		
		private System.DateTime _BeneficiaryAddDate;
		
		private System.Nullable<System.DateTime> _BeneficiaryRemoveDate;
		
		public BeneficiaryGroupDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryGroupID", DbType="Int NOT NULL")]
		public int BeneficiaryGroupID
		{
			get
			{
				return this._BeneficiaryGroupID;
			}
			set
			{
				if ((this._BeneficiaryGroupID != value))
				{
					this._BeneficiaryGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="Int NOT NULL")]
		public int BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this._BeneficiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryAddDate", DbType="DateTime NOT NULL")]
		public System.DateTime BeneficiaryAddDate
		{
			get
			{
				return this._BeneficiaryAddDate;
			}
			set
			{
				if ((this._BeneficiaryAddDate != value))
				{
					this._BeneficiaryAddDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryRemoveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BeneficiaryRemoveDate
		{
			get
			{
				return this._BeneficiaryRemoveDate;
			}
			set
			{
				if ((this._BeneficiaryRemoveDate != value))
				{
					this._BeneficiaryRemoveDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="General.IdentityCardTypes")]
	public partial class IdentityCardType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdentityCardTypeID;
		
		private string _IdentityCardTypeName;
		
		private EntitySet<Beneficiary> _Beneficiaries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdentityCardTypeIDChanging(int value);
    partial void OnIdentityCardTypeIDChanged();
    partial void OnIdentityCardTypeNameChanging(string value);
    partial void OnIdentityCardTypeNameChanged();
    #endregion
		
		public IdentityCardType()
		{
			this._Beneficiaries = new EntitySet<Beneficiary>(new Action<Beneficiary>(this.attach_Beneficiaries), new Action<Beneficiary>(this.detach_Beneficiaries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCardTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdentityCardTypeID
		{
			get
			{
				return this._IdentityCardTypeID;
			}
			set
			{
				if ((this._IdentityCardTypeID != value))
				{
					this.OnIdentityCardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._IdentityCardTypeID = value;
					this.SendPropertyChanged("IdentityCardTypeID");
					this.OnIdentityCardTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCardTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IdentityCardTypeName
		{
			get
			{
				return this._IdentityCardTypeName;
			}
			set
			{
				if ((this._IdentityCardTypeName != value))
				{
					this.OnIdentityCardTypeNameChanging(value);
					this.SendPropertyChanging();
					this._IdentityCardTypeName = value;
					this.SendPropertyChanged("IdentityCardTypeName");
					this.OnIdentityCardTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IdentityCardType_Beneficiary", Storage="_Beneficiaries", ThisKey="IdentityCardTypeID", OtherKey="BeneficiaryIdentityCardType")]
		public EntitySet<Beneficiary> Beneficiaries
		{
			get
			{
				return this._Beneficiaries;
			}
			set
			{
				this._Beneficiaries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Beneficiaries(Beneficiary entity)
		{
			this.SendPropertyChanging();
			entity.IdentityCardType = this;
		}
		
		private void detach_Beneficiaries(Beneficiary entity)
		{
			this.SendPropertyChanging();
			entity.IdentityCardType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Benefits.Beneficiaries")]
	public partial class Beneficiary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BeneficiaryID;
		
		private string _BeneficiaryFName;
		
		private string _BeneficiaryLName;
		
		private string _BeneficiaryPesel;
		
		private string _BeneficiaryAddress;
		
		private int _BeneficiaryIdentityCardType;
		
		private string _BeneficiaryIdentityCardNumber;
		
		private int _BeneficiaryParentEmployeeID;
		
		private EntityRef<IdentityCardType> _IdentityCardType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBeneficiaryIDChanging(int value);
    partial void OnBeneficiaryIDChanged();
    partial void OnBeneficiaryFNameChanging(string value);
    partial void OnBeneficiaryFNameChanged();
    partial void OnBeneficiaryLNameChanging(string value);
    partial void OnBeneficiaryLNameChanged();
    partial void OnBeneficiaryPeselChanging(string value);
    partial void OnBeneficiaryPeselChanged();
    partial void OnBeneficiaryAddressChanging(string value);
    partial void OnBeneficiaryAddressChanged();
    partial void OnBeneficiaryIdentityCardTypeChanging(int value);
    partial void OnBeneficiaryIdentityCardTypeChanged();
    partial void OnBeneficiaryIdentityCardNumberChanging(string value);
    partial void OnBeneficiaryIdentityCardNumberChanged();
    partial void OnBeneficiaryParentEmployeeIDChanging(int value);
    partial void OnBeneficiaryParentEmployeeIDChanged();
    #endregion
		
		public Beneficiary()
		{
			this._IdentityCardType = default(EntityRef<IdentityCardType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this.OnBeneficiaryIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryID = value;
					this.SendPropertyChanged("BeneficiaryID");
					this.OnBeneficiaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryFName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BeneficiaryFName
		{
			get
			{
				return this._BeneficiaryFName;
			}
			set
			{
				if ((this._BeneficiaryFName != value))
				{
					this.OnBeneficiaryFNameChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryFName = value;
					this.SendPropertyChanged("BeneficiaryFName");
					this.OnBeneficiaryFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryLName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BeneficiaryLName
		{
			get
			{
				return this._BeneficiaryLName;
			}
			set
			{
				if ((this._BeneficiaryLName != value))
				{
					this.OnBeneficiaryLNameChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryLName = value;
					this.SendPropertyChanged("BeneficiaryLName");
					this.OnBeneficiaryLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryPesel", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string BeneficiaryPesel
		{
			get
			{
				return this._BeneficiaryPesel;
			}
			set
			{
				if ((this._BeneficiaryPesel != value))
				{
					this.OnBeneficiaryPeselChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryPesel = value;
					this.SendPropertyChanged("BeneficiaryPesel");
					this.OnBeneficiaryPeselChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryAddress", DbType="NVarChar(160) NOT NULL", CanBeNull=false)]
		public string BeneficiaryAddress
		{
			get
			{
				return this._BeneficiaryAddress;
			}
			set
			{
				if ((this._BeneficiaryAddress != value))
				{
					this.OnBeneficiaryAddressChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryAddress = value;
					this.SendPropertyChanged("BeneficiaryAddress");
					this.OnBeneficiaryAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryIdentityCardType", DbType="Int NOT NULL")]
		public int BeneficiaryIdentityCardType
		{
			get
			{
				return this._BeneficiaryIdentityCardType;
			}
			set
			{
				if ((this._BeneficiaryIdentityCardType != value))
				{
					if (this._IdentityCardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneficiaryIdentityCardTypeChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryIdentityCardType = value;
					this.SendPropertyChanged("BeneficiaryIdentityCardType");
					this.OnBeneficiaryIdentityCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryIdentityCardNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BeneficiaryIdentityCardNumber
		{
			get
			{
				return this._BeneficiaryIdentityCardNumber;
			}
			set
			{
				if ((this._BeneficiaryIdentityCardNumber != value))
				{
					this.OnBeneficiaryIdentityCardNumberChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryIdentityCardNumber = value;
					this.SendPropertyChanged("BeneficiaryIdentityCardNumber");
					this.OnBeneficiaryIdentityCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryParentEmployeeID", DbType="Int NOT NULL")]
		public int BeneficiaryParentEmployeeID
		{
			get
			{
				return this._BeneficiaryParentEmployeeID;
			}
			set
			{
				if ((this._BeneficiaryParentEmployeeID != value))
				{
					this.OnBeneficiaryParentEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryParentEmployeeID = value;
					this.SendPropertyChanged("BeneficiaryParentEmployeeID");
					this.OnBeneficiaryParentEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IdentityCardType_Beneficiary", Storage="_IdentityCardType", ThisKey="BeneficiaryIdentityCardType", OtherKey="IdentityCardTypeID", IsForeignKey=true)]
		public IdentityCardType IdentityCardType
		{
			get
			{
				return this._IdentityCardType.Entity;
			}
			set
			{
				IdentityCardType previousValue = this._IdentityCardType.Entity;
				if (((previousValue != value) 
							|| (this._IdentityCardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IdentityCardType.Entity = null;
						previousValue.Beneficiaries.Remove(this);
					}
					this._IdentityCardType.Entity = value;
					if ((value != null))
					{
						value.Beneficiaries.Add(this);
						this._BeneficiaryIdentityCardType = value.IdentityCardTypeID;
					}
					else
					{
						this._BeneficiaryIdentityCardType = default(int);
					}
					this.SendPropertyChanged("IdentityCardType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Benefits.BeneficiaryGroupId")]
	public partial class BeneficiaryGroupId : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BeneficiaryGroupID;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBeneficiaryGroupIDChanging(int value);
    partial void OnBeneficiaryGroupIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public BeneficiaryGroupId()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryGroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BeneficiaryGroupID
		{
			get
			{
				return this._BeneficiaryGroupID;
			}
			set
			{
				if ((this._BeneficiaryGroupID != value))
				{
					this.OnBeneficiaryGroupIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryGroupID = value;
					this.SendPropertyChanged("BeneficiaryGroupID");
					this.OnBeneficiaryGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetEmployeesResult
	{
		
		private int _EmployeeID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _email;
		
		private System.Nullable<int> _LevelID;
		
		public GetEmployeesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(200)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int")]
		public System.Nullable<int> LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this._LevelID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
