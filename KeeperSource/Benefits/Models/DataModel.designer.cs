#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KeeperRichClient.Modules.Benefits.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MCM_Keeper")]
	public partial class DbContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMedicalPacketType(MedicalPacketType instance);
    partial void UpdateMedicalPacketType(MedicalPacketType instance);
    partial void DeleteMedicalPacketType(MedicalPacketType instance);
    partial void InsertBeneficiaryGroupId(BeneficiaryGroupId instance);
    partial void UpdateBeneficiaryGroupId(BeneficiaryGroupId instance);
    partial void DeleteBeneficiaryGroupId(BeneficiaryGroupId instance);
    partial void InsertConfiguredMedicalPacketToEmployee(ConfiguredMedicalPacketToEmployee instance);
    partial void UpdateConfiguredMedicalPacketToEmployee(ConfiguredMedicalPacketToEmployee instance);
    partial void DeleteConfiguredMedicalPacketToEmployee(ConfiguredMedicalPacketToEmployee instance);
    partial void InsertParkingPlace(ParkingPlace instance);
    partial void UpdateParkingPlace(ParkingPlace instance);
    partial void DeleteParkingPlace(ParkingPlace instance);
    partial void InsertParking(Parking instance);
    partial void UpdateParking(Parking instance);
    partial void DeleteParking(Parking instance);
    partial void InsertMultisportPacketType(MultisportPacketType instance);
    partial void UpdateMultisportPacketType(MultisportPacketType instance);
    partial void DeleteMultisportPacketType(MultisportPacketType instance);
    partial void InsertTakingReasonType(TakingReasonType instance);
    partial void UpdateTakingReasonType(TakingReasonType instance);
    partial void DeleteTakingReasonType(TakingReasonType instance);
    partial void InsertBeneficiary(Beneficiary instance);
    partial void UpdateBeneficiary(Beneficiary instance);
    partial void DeleteBeneficiary(Beneficiary instance);
    #endregion
		
		public DbContext() : 
				base(global::KeeperRichClient.Modules.Benefits.Properties.Settings.Default.MCM_KeeperConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MedicalPacketType> MedicalPacketTypes
		{
			get
			{
				return this.GetTable<MedicalPacketType>();
			}
		}
		
		public System.Data.Linq.Table<MedicalPacketTypeSetting> MedicalPacketTypeSettings
		{
			get
			{
				return this.GetTable<MedicalPacketTypeSetting>();
			}
		}
		
		public System.Data.Linq.Table<BeneficiaryGroupDetail> BeneficiaryGroupDetails
		{
			get
			{
				return this.GetTable<BeneficiaryGroupDetail>();
			}
		}
		
		public System.Data.Linq.Table<BeneficiaryGroupId> BeneficiaryGroupIds
		{
			get
			{
				return this.GetTable<BeneficiaryGroupId>();
			}
		}
		
		public System.Data.Linq.Table<ConfiguredMedicalPacketToEmployee> ConfiguredMedicalPacketToEmployees
		{
			get
			{
				return this.GetTable<ConfiguredMedicalPacketToEmployee>();
			}
		}
		
		public System.Data.Linq.Table<ConfiguredMultisportPacketsToEmployee> ConfiguredMultisportPacketsToEmployees
		{
			get
			{
				return this.GetTable<ConfiguredMultisportPacketsToEmployee>();
			}
		}
		
		public System.Data.Linq.Table<ParkingPlace> ParkingPlaces
		{
			get
			{
				return this.GetTable<ParkingPlace>();
			}
		}
		
		public System.Data.Linq.Table<ParkingPlacesToEmployee> ParkingPlacesToEmployees
		{
			get
			{
				return this.GetTable<ParkingPlacesToEmployee>();
			}
		}
		
		public System.Data.Linq.Table<Parking> Parkings
		{
			get
			{
				return this.GetTable<Parking>();
			}
		}
		
		public System.Data.Linq.Table<MultisportPacketType> MultisportPacketTypes
		{
			get
			{
				return this.GetTable<MultisportPacketType>();
			}
		}
		
		public System.Data.Linq.Table<TakingReasonType> TakingReasonTypes
		{
			get
			{
				return this.GetTable<TakingReasonType>();
			}
		}
		
		public System.Data.Linq.Table<Beneficiary> Beneficiaries
		{
			get
			{
				return this.GetTable<Beneficiary>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Benefits.spAddBeneficiaryToMedicalPacket")]
		public int spAddBeneficiaryToMedicalPacket([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryID", DbType="Int")] System.Nullable<int> beneficiaryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicalPacketID", DbType="Int")] System.Nullable<int> medicalPacketID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), beneficiaryID, medicalPacketID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Benefits.spRemoveBeneficiaryFromMedicalPacket")]
		public int spRemoveBeneficiaryFromMedicalPacket([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryID", DbType="Int")] System.Nullable<int> beneficiaryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicalPacketId", DbType="Int")] System.Nullable<int> medicalPacketId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), beneficiaryID, medicalPacketId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Healthcare.spAddMedicalPacketToEmployee")]
		public int spAddMedicalPacketToEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicalPacketTypeId", DbType="Int")] System.Nullable<int> medicalPacketTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryGroupId", DbType="Int")] System.Nullable<int> beneficiaryGroupId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ValidFrom", DbType="DateTime")] System.Nullable<System.DateTime> validFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ValidTo", DbType="DateTime")] System.Nullable<System.DateTime> validTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IncludedInLimit", DbType="Bit")] System.Nullable<bool> includedInLimit, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPayedByEmployee", DbType="Bit")] System.Nullable<bool> isPayedByEmployee, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Note", DbType="NVarChar(500)")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeId, medicalPacketTypeId, beneficiaryGroupId, validFrom, validTo, includedInLimit, isPayedByEmployee, note);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Healthcare.spCreateBeneficiaryGroupForMedPack")]
		public int spCreateBeneficiaryGroupForMedPack([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedPackID", DbType="Int")] System.Nullable<int> medPackID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medPackID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Benefits.fMultisportCardTypes", IsComposable=true)]
		public IQueryable<fMultisportCardTypesResult> fMultisportCardTypes()
		{
			return this.CreateMethodCallQuery<fMultisportCardTypesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Parkings.fParksWithFreePlaces", IsComposable=true)]
		public IQueryable<fParksWithFreePlacesResult> fParksWithFreePlaces()
		{
			return this.CreateMethodCallQuery<fParksWithFreePlacesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Parkings.spTakeParkingPlace")]
		public int spTakeParkingPlace([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParkingPlaceId", DbType="Int")] System.Nullable<int> parkingPlaceId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeId, parkingPlaceId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Parkings.spSaveParkingPlace")]
		public int spSaveParkingPlace([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParkingPlaceId", DbType="Int")] System.Nullable<int> parkingPlaceId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsIncludedInLimit", DbType="Bit")] System.Nullable<bool> isIncludedInLimit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeId, parkingPlaceId, isIncludedInLimit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="MultiSport.spAddConfigutedMultiSportCard")]
		public int spAddConfigutedMultiSportCard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CardTypeId", DbType="Int")] System.Nullable<int> cardTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryId", DbType="Int")] System.Nullable<int> beneficiaryId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ValidFrom", DbType="DateTime")] System.Nullable<System.DateTime> validFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ValidTo", DbType="DateTime")] System.Nullable<System.DateTime> validTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsIncludedInLimit", DbType="Bit")] System.Nullable<bool> isIncludedInLimit, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPayedByEmployee", DbType="Bit")] System.Nullable<bool> isPayedByEmployee)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cardTypeId, employeeId, beneficiaryId, validFrom, validTo, isIncludedInLimit, isPayedByEmployee);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Benefits.fMultisportOwnerToEmployee", IsComposable=true)]
		public IQueryable<fMultisportOwnerToEmployeeResult> fMultisportOwnerToEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId)
		{
			return this.CreateMethodCallQuery<fMultisportOwnerToEmployeeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="MultiSport.spTakeConfiguredMultiSportCard")]
		public int spTakeConfiguredMultiSportCard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConfiguredMultiSportCardId", DbType="Int")] System.Nullable<int> configuredMultiSportCardId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), configuredMultiSportCardId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Healthcare.spRemoveMedicalPacketFromEmployee")]
		public int spRemoveMedicalPacketFromEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicalPacketId", DbType="Int")] System.Nullable<int> medicalPacketId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TakingDate", DbType="DateTime")] System.Nullable<System.DateTime> takingDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TakingReasonId", DbType="Int")] System.Nullable<int> takingReasonId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Note", DbType="NVarChar(500)")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicalPacketId, takingDate, takingReasonId, note);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fBeneficiariesToEmployee", IsComposable=true)]
		public IQueryable<fBeneficiariesToEmployeeResult> fBeneficiariesToEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentEmployeeId", DbType="Int")] System.Nullable<int> parentEmployeeId)
		{
			return this.CreateMethodCallQuery<fBeneficiariesToEmployeeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), parentEmployeeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Healthcare.vMedicalPacketsToEmployee", IsComposable=true)]
		public IQueryable<vMedicalPacketsToEmployeeResult> vMedicalPacketsToEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeId", DbType="Int")] System.Nullable<int> employeeId)
		{
			return this.CreateMethodCallQuery<vMedicalPacketsToEmployeeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Benefits.spCreateMedicalBeneficiary")]
		public int spCreateMedicalBeneficiary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryFName", DbType="NVarChar(20)")] string beneficiaryFName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryLName", DbType="NVarChar(20)")] string beneficiaryLName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryPesel", DbType="NVarChar(11)")] string beneficiaryPesel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryBirthDate", DbType="DateTime")] System.Nullable<System.DateTime> beneficiaryBirthDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryCitizenship", DbType="NVarChar(10)")] string beneficiaryCitizenship, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiarySex", DbType="NVarChar(1)")] string beneficiarySex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryPhoneNumber", DbType="NVarChar(50)")] string beneficiaryPhoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryEmailAddress", DbType="NVarChar(100)")] string beneficiaryEmailAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryParentEmployeeId", DbType="Int")] System.Nullable<int> beneficiaryParentEmployeeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), beneficiaryFName, beneficiaryLName, beneficiaryPesel, beneficiaryBirthDate, beneficiaryCitizenship, beneficiarySex, beneficiaryPhoneNumber, beneficiaryEmailAddress, beneficiaryParentEmployeeId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Benefits.spCreateMultisportBeneficiary")]
		public int spCreateMultisportBeneficiary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryFName", DbType="NVarChar(20)")] string beneficiaryFName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryLName", DbType="NVarChar(20)")] string beneficiaryLName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneficiaryParentEmployeeId", DbType="Int")] System.Nullable<int> beneficiaryParentEmployeeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), beneficiaryFName, beneficiaryLName, beneficiaryParentEmployeeId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Healthcare.vBeneficiaries2MedPack", IsComposable=true)]
		public IQueryable<vBeneficiaries2MedPackResult> vBeneficiaries2MedPack([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedPackID", DbType="Int")] System.Nullable<int> medPackID)
		{
			return this.CreateMethodCallQuery<vBeneficiaries2MedPackResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medPackID);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Healthcare.MedicalPacketTypes")]
	public partial class MedicalPacketType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MedicalPacketID;
		
		private string _MedicalPacketName;
		
		private EntitySet<ConfiguredMedicalPacketToEmployee> _ConfiguredMedicalPacketToEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicalPacketIDChanging(int value);
    partial void OnMedicalPacketIDChanged();
    partial void OnMedicalPacketNameChanging(string value);
    partial void OnMedicalPacketNameChanged();
    #endregion
		
		public MedicalPacketType()
		{
			this._ConfiguredMedicalPacketToEmployees = new EntitySet<ConfiguredMedicalPacketToEmployee>(new Action<ConfiguredMedicalPacketToEmployee>(this.attach_ConfiguredMedicalPacketToEmployees), new Action<ConfiguredMedicalPacketToEmployee>(this.detach_ConfiguredMedicalPacketToEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalPacketID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MedicalPacketID
		{
			get
			{
				return this._MedicalPacketID;
			}
			set
			{
				if ((this._MedicalPacketID != value))
				{
					this.OnMedicalPacketIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalPacketID = value;
					this.SendPropertyChanged("MedicalPacketID");
					this.OnMedicalPacketIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalPacketName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MedicalPacketName
		{
			get
			{
				return this._MedicalPacketName;
			}
			set
			{
				if ((this._MedicalPacketName != value))
				{
					this.OnMedicalPacketNameChanging(value);
					this.SendPropertyChanging();
					this._MedicalPacketName = value;
					this.SendPropertyChanged("MedicalPacketName");
					this.OnMedicalPacketNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedicalPacketType_ConfiguredMedicalPacketToEmployee", Storage="_ConfiguredMedicalPacketToEmployees", ThisKey="MedicalPacketID", OtherKey="MedicalPacketTypeID")]
		public EntitySet<ConfiguredMedicalPacketToEmployee> ConfiguredMedicalPacketToEmployees
		{
			get
			{
				return this._ConfiguredMedicalPacketToEmployees;
			}
			set
			{
				this._ConfiguredMedicalPacketToEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfiguredMedicalPacketToEmployees(ConfiguredMedicalPacketToEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MedicalPacketType = this;
		}
		
		private void detach_ConfiguredMedicalPacketToEmployees(ConfiguredMedicalPacketToEmployee entity)
		{
			this.SendPropertyChanging();
			entity.MedicalPacketType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Healthcare.MedicalPacketTypeSettings")]
	public partial class MedicalPacketTypeSetting
	{
		
		private int _MedicalPacketID;
		
		private decimal _MedicalPacketTotalCost;
		
		private decimal _OccupationalMedicinePartPC;
		
		private decimal _PreventionMedicinePartPC;
		
		private decimal _IndividualMedicinePartPC;
		
		private decimal _FamilyMedicinePartPC;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _DeactivateDate;
		
		public MedicalPacketTypeSetting()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalPacketID", DbType="Int NOT NULL")]
		public int MedicalPacketID
		{
			get
			{
				return this._MedicalPacketID;
			}
			set
			{
				if ((this._MedicalPacketID != value))
				{
					this._MedicalPacketID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalPacketTotalCost", DbType="Decimal(6,2) NOT NULL")]
		public decimal MedicalPacketTotalCost
		{
			get
			{
				return this._MedicalPacketTotalCost;
			}
			set
			{
				if ((this._MedicalPacketTotalCost != value))
				{
					this._MedicalPacketTotalCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupationalMedicinePartPC", DbType="Decimal(10,10) NOT NULL")]
		public decimal OccupationalMedicinePartPC
		{
			get
			{
				return this._OccupationalMedicinePartPC;
			}
			set
			{
				if ((this._OccupationalMedicinePartPC != value))
				{
					this._OccupationalMedicinePartPC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreventionMedicinePartPC", DbType="Decimal(10,10) NOT NULL")]
		public decimal PreventionMedicinePartPC
		{
			get
			{
				return this._PreventionMedicinePartPC;
			}
			set
			{
				if ((this._PreventionMedicinePartPC != value))
				{
					this._PreventionMedicinePartPC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndividualMedicinePartPC", DbType="Decimal(10,10) NOT NULL")]
		public decimal IndividualMedicinePartPC
		{
			get
			{
				return this._IndividualMedicinePartPC;
			}
			set
			{
				if ((this._IndividualMedicinePartPC != value))
				{
					this._IndividualMedicinePartPC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyMedicinePartPC", DbType="Decimal(10,10) NOT NULL")]
		public decimal FamilyMedicinePartPC
		{
			get
			{
				return this._FamilyMedicinePartPC;
			}
			set
			{
				if ((this._FamilyMedicinePartPC != value))
				{
					this._FamilyMedicinePartPC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeactivateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeactivateDate
		{
			get
			{
				return this._DeactivateDate;
			}
			set
			{
				if ((this._DeactivateDate != value))
				{
					this._DeactivateDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Benefits.BeneficiaryGroupDetails")]
	public partial class BeneficiaryGroupDetail
	{
		
		private int _BeneficiaryGroupID;
		
		private int _BeneficiaryID;
		
		private System.DateTime _BeneficiaryAddDate;
		
		private System.Nullable<System.DateTime> _BeneficiaryRemoveDate;
		
		public BeneficiaryGroupDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryGroupID", DbType="Int NOT NULL")]
		public int BeneficiaryGroupID
		{
			get
			{
				return this._BeneficiaryGroupID;
			}
			set
			{
				if ((this._BeneficiaryGroupID != value))
				{
					this._BeneficiaryGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="Int NOT NULL")]
		public int BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this._BeneficiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryAddDate", DbType="DateTime NOT NULL")]
		public System.DateTime BeneficiaryAddDate
		{
			get
			{
				return this._BeneficiaryAddDate;
			}
			set
			{
				if ((this._BeneficiaryAddDate != value))
				{
					this._BeneficiaryAddDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryRemoveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BeneficiaryRemoveDate
		{
			get
			{
				return this._BeneficiaryRemoveDate;
			}
			set
			{
				if ((this._BeneficiaryRemoveDate != value))
				{
					this._BeneficiaryRemoveDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Benefits.BeneficiaryGroupIds")]
	public partial class BeneficiaryGroupId : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private bool _IsActive;
		
		private EntitySet<ConfiguredMedicalPacketToEmployee> _ConfiguredMedicalPacketToEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public BeneficiaryGroupId()
		{
			this._ConfiguredMedicalPacketToEmployees = new EntitySet<ConfiguredMedicalPacketToEmployee>(new Action<ConfiguredMedicalPacketToEmployee>(this.attach_ConfiguredMedicalPacketToEmployees), new Action<ConfiguredMedicalPacketToEmployee>(this.detach_ConfiguredMedicalPacketToEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryGroupId_ConfiguredMedicalPacketToEmployee", Storage="_ConfiguredMedicalPacketToEmployees", ThisKey="GroupID", OtherKey="BeneficiaryGroupID")]
		public EntitySet<ConfiguredMedicalPacketToEmployee> ConfiguredMedicalPacketToEmployees
		{
			get
			{
				return this._ConfiguredMedicalPacketToEmployees;
			}
			set
			{
				this._ConfiguredMedicalPacketToEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfiguredMedicalPacketToEmployees(ConfiguredMedicalPacketToEmployee entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryGroupId1 = this;
		}
		
		private void detach_ConfiguredMedicalPacketToEmployees(ConfiguredMedicalPacketToEmployee entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryGroupId1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Healthcare.ConfiguredMedicalPacketToEmployee")]
	public partial class ConfiguredMedicalPacketToEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConfiguredMedicalPacketID;
		
		private int _EmployeeID;
		
		private int _MedicalPacketTypeID;
		
		private System.Nullable<int> _BeneficiaryGroupID;
		
		private System.DateTime _ValidFrom;
		
		private System.Nullable<System.DateTime> _ValidTo;
		
		private bool _IncludedInLimit;
		
		private bool _IsPayedByEmployee;
		
		private System.DateTime _AssignDate;
		
		private System.Nullable<System.DateTime> _TakingDate;
		
		private System.Nullable<int> _TakingReasonID;
		
		private string _Note;
		
		private EntityRef<BeneficiaryGroupId> _BeneficiaryGroupId1;
		
		private EntityRef<MedicalPacketType> _MedicalPacketType;
		
		private EntityRef<TakingReasonType> _TakingReasonType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfiguredMedicalPacketIDChanging(int value);
    partial void OnConfiguredMedicalPacketIDChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnMedicalPacketTypeIDChanging(int value);
    partial void OnMedicalPacketTypeIDChanged();
    partial void OnBeneficiaryGroupIDChanging(System.Nullable<int> value);
    partial void OnBeneficiaryGroupIDChanged();
    partial void OnValidFromChanging(System.DateTime value);
    partial void OnValidFromChanged();
    partial void OnValidToChanging(System.Nullable<System.DateTime> value);
    partial void OnValidToChanged();
    partial void OnIncludedInLimitChanging(bool value);
    partial void OnIncludedInLimitChanged();
    partial void OnIsPayedByEmployeeChanging(bool value);
    partial void OnIsPayedByEmployeeChanged();
    partial void OnAssignDateChanging(System.DateTime value);
    partial void OnAssignDateChanged();
    partial void OnTakingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTakingDateChanged();
    partial void OnTakingReasonIDChanging(System.Nullable<int> value);
    partial void OnTakingReasonIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public ConfiguredMedicalPacketToEmployee()
		{
			this._BeneficiaryGroupId1 = default(EntityRef<BeneficiaryGroupId>);
			this._MedicalPacketType = default(EntityRef<MedicalPacketType>);
			this._TakingReasonType = default(EntityRef<TakingReasonType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfiguredMedicalPacketID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConfiguredMedicalPacketID
		{
			get
			{
				return this._ConfiguredMedicalPacketID;
			}
			set
			{
				if ((this._ConfiguredMedicalPacketID != value))
				{
					this.OnConfiguredMedicalPacketIDChanging(value);
					this.SendPropertyChanging();
					this._ConfiguredMedicalPacketID = value;
					this.SendPropertyChanged("ConfiguredMedicalPacketID");
					this.OnConfiguredMedicalPacketIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalPacketTypeID", DbType="Int NOT NULL")]
		public int MedicalPacketTypeID
		{
			get
			{
				return this._MedicalPacketTypeID;
			}
			set
			{
				if ((this._MedicalPacketTypeID != value))
				{
					if (this._MedicalPacketType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedicalPacketTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalPacketTypeID = value;
					this.SendPropertyChanged("MedicalPacketTypeID");
					this.OnMedicalPacketTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryGroupID", DbType="Int")]
		public System.Nullable<int> BeneficiaryGroupID
		{
			get
			{
				return this._BeneficiaryGroupID;
			}
			set
			{
				if ((this._BeneficiaryGroupID != value))
				{
					if (this._BeneficiaryGroupId1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneficiaryGroupIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryGroupID = value;
					this.SendPropertyChanged("BeneficiaryGroupID");
					this.OnBeneficiaryGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidFrom", DbType="DateTime NOT NULL")]
		public System.DateTime ValidFrom
		{
			get
			{
				return this._ValidFrom;
			}
			set
			{
				if ((this._ValidFrom != value))
				{
					this.OnValidFromChanging(value);
					this.SendPropertyChanging();
					this._ValidFrom = value;
					this.SendPropertyChanged("ValidFrom");
					this.OnValidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> ValidTo
		{
			get
			{
				return this._ValidTo;
			}
			set
			{
				if ((this._ValidTo != value))
				{
					this.OnValidToChanging(value);
					this.SendPropertyChanging();
					this._ValidTo = value;
					this.SendPropertyChanged("ValidTo");
					this.OnValidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludedInLimit", DbType="Bit NOT NULL")]
		public bool IncludedInLimit
		{
			get
			{
				return this._IncludedInLimit;
			}
			set
			{
				if ((this._IncludedInLimit != value))
				{
					this.OnIncludedInLimitChanging(value);
					this.SendPropertyChanging();
					this._IncludedInLimit = value;
					this.SendPropertyChanged("IncludedInLimit");
					this.OnIncludedInLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayedByEmployee", DbType="Bit NOT NULL")]
		public bool IsPayedByEmployee
		{
			get
			{
				return this._IsPayedByEmployee;
			}
			set
			{
				if ((this._IsPayedByEmployee != value))
				{
					this.OnIsPayedByEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IsPayedByEmployee = value;
					this.SendPropertyChanged("IsPayedByEmployee");
					this.OnIsPayedByEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignDate
		{
			get
			{
				return this._AssignDate;
			}
			set
			{
				if ((this._AssignDate != value))
				{
					this.OnAssignDateChanging(value);
					this.SendPropertyChanging();
					this._AssignDate = value;
					this.SendPropertyChanged("AssignDate");
					this.OnAssignDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TakingDate
		{
			get
			{
				return this._TakingDate;
			}
			set
			{
				if ((this._TakingDate != value))
				{
					this.OnTakingDateChanging(value);
					this.SendPropertyChanging();
					this._TakingDate = value;
					this.SendPropertyChanged("TakingDate");
					this.OnTakingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakingReasonID", DbType="Int")]
		public System.Nullable<int> TakingReasonID
		{
			get
			{
				return this._TakingReasonID;
			}
			set
			{
				if ((this._TakingReasonID != value))
				{
					if (this._TakingReasonType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTakingReasonIDChanging(value);
					this.SendPropertyChanging();
					this._TakingReasonID = value;
					this.SendPropertyChanged("TakingReasonID");
					this.OnTakingReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryGroupId_ConfiguredMedicalPacketToEmployee", Storage="_BeneficiaryGroupId1", ThisKey="BeneficiaryGroupID", OtherKey="GroupID", IsForeignKey=true)]
		public BeneficiaryGroupId BeneficiaryGroupId1
		{
			get
			{
				return this._BeneficiaryGroupId1.Entity;
			}
			set
			{
				BeneficiaryGroupId previousValue = this._BeneficiaryGroupId1.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryGroupId1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryGroupId1.Entity = null;
						previousValue.ConfiguredMedicalPacketToEmployees.Remove(this);
					}
					this._BeneficiaryGroupId1.Entity = value;
					if ((value != null))
					{
						value.ConfiguredMedicalPacketToEmployees.Add(this);
						this._BeneficiaryGroupID = value.GroupID;
					}
					else
					{
						this._BeneficiaryGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BeneficiaryGroupId1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedicalPacketType_ConfiguredMedicalPacketToEmployee", Storage="_MedicalPacketType", ThisKey="MedicalPacketTypeID", OtherKey="MedicalPacketID", IsForeignKey=true)]
		public MedicalPacketType MedicalPacketType
		{
			get
			{
				return this._MedicalPacketType.Entity;
			}
			set
			{
				MedicalPacketType previousValue = this._MedicalPacketType.Entity;
				if (((previousValue != value) 
							|| (this._MedicalPacketType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedicalPacketType.Entity = null;
						previousValue.ConfiguredMedicalPacketToEmployees.Remove(this);
					}
					this._MedicalPacketType.Entity = value;
					if ((value != null))
					{
						value.ConfiguredMedicalPacketToEmployees.Add(this);
						this._MedicalPacketTypeID = value.MedicalPacketID;
					}
					else
					{
						this._MedicalPacketTypeID = default(int);
					}
					this.SendPropertyChanged("MedicalPacketType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TakingReasonType_ConfiguredMedicalPacketToEmployee", Storage="_TakingReasonType", ThisKey="TakingReasonID", OtherKey="TakingReasonID", IsForeignKey=true)]
		public TakingReasonType TakingReasonType
		{
			get
			{
				return this._TakingReasonType.Entity;
			}
			set
			{
				TakingReasonType previousValue = this._TakingReasonType.Entity;
				if (((previousValue != value) 
							|| (this._TakingReasonType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TakingReasonType.Entity = null;
						previousValue.ConfiguredMedicalPacketToEmployees.Remove(this);
					}
					this._TakingReasonType.Entity = value;
					if ((value != null))
					{
						value.ConfiguredMedicalPacketToEmployees.Add(this);
						this._TakingReasonID = value.TakingReasonID;
					}
					else
					{
						this._TakingReasonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TakingReasonType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Benefits.ConfiguredMultisportPacketsToEmployees")]
	public partial class ConfiguredMultisportPacketsToEmployee
	{
		
		private int _ConfiguredBenefitPacketID;
		
		private int _EmployeeID;
		
		private int _MultiSportPacketTypeID;
		
		private System.Nullable<int> _BeneficiaryID;
		
		private System.DateTime _ValidFrom;
		
		private System.Nullable<System.DateTime> _ValidTo;
		
		private bool _IsIncludedInLimit;
		
		private bool _IsPayedByEmployee;
		
		private System.DateTime _AssignDate;
		
		private System.Nullable<System.DateTime> _TakingDate;
		
		private System.Nullable<int> _TakingReasonID;
		
		private string _Note;
		
		public ConfiguredMultisportPacketsToEmployee()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfiguredBenefitPacketID", DbType="Int NOT NULL")]
		public int ConfiguredBenefitPacketID
		{
			get
			{
				return this._ConfiguredBenefitPacketID;
			}
			set
			{
				if ((this._ConfiguredBenefitPacketID != value))
				{
					this._ConfiguredBenefitPacketID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiSportPacketTypeID", DbType="Int NOT NULL")]
		public int MultiSportPacketTypeID
		{
			get
			{
				return this._MultiSportPacketTypeID;
			}
			set
			{
				if ((this._MultiSportPacketTypeID != value))
				{
					this._MultiSportPacketTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="Int")]
		public System.Nullable<int> BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this._BeneficiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidFrom", DbType="DateTime NOT NULL")]
		public System.DateTime ValidFrom
		{
			get
			{
				return this._ValidFrom;
			}
			set
			{
				if ((this._ValidFrom != value))
				{
					this._ValidFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> ValidTo
		{
			get
			{
				return this._ValidTo;
			}
			set
			{
				if ((this._ValidTo != value))
				{
					this._ValidTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncludedInLimit", DbType="Bit NOT NULL")]
		public bool IsIncludedInLimit
		{
			get
			{
				return this._IsIncludedInLimit;
			}
			set
			{
				if ((this._IsIncludedInLimit != value))
				{
					this._IsIncludedInLimit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayedByEmployee", DbType="Bit NOT NULL")]
		public bool IsPayedByEmployee
		{
			get
			{
				return this._IsPayedByEmployee;
			}
			set
			{
				if ((this._IsPayedByEmployee != value))
				{
					this._IsPayedByEmployee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignDate
		{
			get
			{
				return this._AssignDate;
			}
			set
			{
				if ((this._AssignDate != value))
				{
					this._AssignDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TakingDate
		{
			get
			{
				return this._TakingDate;
			}
			set
			{
				if ((this._TakingDate != value))
				{
					this._TakingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakingReasonID", DbType="Int")]
		public System.Nullable<int> TakingReasonID
		{
			get
			{
				return this._TakingReasonID;
			}
			set
			{
				if ((this._TakingReasonID != value))
				{
					this._TakingReasonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Parkings.ParkingPlaces")]
	public partial class ParkingPlace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParkingPlaceID;
		
		private int _ParkingID;
		
		private string _ParkingPlaceName;
		
		private bool _IsActive;
		
		private EntityRef<Parking> _Parking;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParkingPlaceIDChanging(int value);
    partial void OnParkingPlaceIDChanged();
    partial void OnParkingIDChanging(int value);
    partial void OnParkingIDChanged();
    partial void OnParkingPlaceNameChanging(string value);
    partial void OnParkingPlaceNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public ParkingPlace()
		{
			this._Parking = default(EntityRef<Parking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingPlaceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ParkingPlaceID
		{
			get
			{
				return this._ParkingPlaceID;
			}
			set
			{
				if ((this._ParkingPlaceID != value))
				{
					this.OnParkingPlaceIDChanging(value);
					this.SendPropertyChanging();
					this._ParkingPlaceID = value;
					this.SendPropertyChanged("ParkingPlaceID");
					this.OnParkingPlaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingID", DbType="Int NOT NULL")]
		public int ParkingID
		{
			get
			{
				return this._ParkingID;
			}
			set
			{
				if ((this._ParkingID != value))
				{
					if (this._Parking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParkingIDChanging(value);
					this.SendPropertyChanging();
					this._ParkingID = value;
					this.SendPropertyChanged("ParkingID");
					this.OnParkingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingPlaceName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ParkingPlaceName
		{
			get
			{
				return this._ParkingPlaceName;
			}
			set
			{
				if ((this._ParkingPlaceName != value))
				{
					this.OnParkingPlaceNameChanging(value);
					this.SendPropertyChanging();
					this._ParkingPlaceName = value;
					this.SendPropertyChanged("ParkingPlaceName");
					this.OnParkingPlaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parking_ParkingPlace", Storage="_Parking", ThisKey="ParkingID", OtherKey="ParkingID", IsForeignKey=true)]
		public Parking Parking
		{
			get
			{
				return this._Parking.Entity;
			}
			set
			{
				Parking previousValue = this._Parking.Entity;
				if (((previousValue != value) 
							|| (this._Parking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parking.Entity = null;
						previousValue.ParkingPlaces.Remove(this);
					}
					this._Parking.Entity = value;
					if ((value != null))
					{
						value.ParkingPlaces.Add(this);
						this._ParkingID = value.ParkingID;
					}
					else
					{
						this._ParkingID = default(int);
					}
					this.SendPropertyChanged("Parking");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Parkings.ParkingPlacesToEmployees")]
	public partial class ParkingPlacesToEmployee
	{
		
		private int _EmployeeID;
		
		private int _ParkingPlaceID;
		
		private bool _IsIncludedInLimit;
		
		private System.DateTime _AssignDate;
		
		private System.Nullable<System.DateTime> _TakingDate;
		
		private System.Nullable<int> _TakingReasonID;
		
		private string _Note;
		
		public ParkingPlacesToEmployee()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingPlaceID", DbType="Int NOT NULL")]
		public int ParkingPlaceID
		{
			get
			{
				return this._ParkingPlaceID;
			}
			set
			{
				if ((this._ParkingPlaceID != value))
				{
					this._ParkingPlaceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncludedInLimit", DbType="Bit NOT NULL")]
		public bool IsIncludedInLimit
		{
			get
			{
				return this._IsIncludedInLimit;
			}
			set
			{
				if ((this._IsIncludedInLimit != value))
				{
					this._IsIncludedInLimit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignDate
		{
			get
			{
				return this._AssignDate;
			}
			set
			{
				if ((this._AssignDate != value))
				{
					this._AssignDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TakingDate
		{
			get
			{
				return this._TakingDate;
			}
			set
			{
				if ((this._TakingDate != value))
				{
					this._TakingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakingReasonID", DbType="Int")]
		public System.Nullable<int> TakingReasonID
		{
			get
			{
				return this._TakingReasonID;
			}
			set
			{
				if ((this._TakingReasonID != value))
				{
					this._TakingReasonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Parkings.Parkings")]
	public partial class Parking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParkingID;
		
		private string _ParkingName;
		
		private decimal _ParkingCost;
		
		private bool _IsActive;
		
		private EntitySet<ParkingPlace> _ParkingPlaces;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParkingIDChanging(int value);
    partial void OnParkingIDChanged();
    partial void OnParkingNameChanging(string value);
    partial void OnParkingNameChanged();
    partial void OnParkingCostChanging(decimal value);
    partial void OnParkingCostChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Parking()
		{
			this._ParkingPlaces = new EntitySet<ParkingPlace>(new Action<ParkingPlace>(this.attach_ParkingPlaces), new Action<ParkingPlace>(this.detach_ParkingPlaces));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ParkingID
		{
			get
			{
				return this._ParkingID;
			}
			set
			{
				if ((this._ParkingID != value))
				{
					this.OnParkingIDChanging(value);
					this.SendPropertyChanging();
					this._ParkingID = value;
					this.SendPropertyChanged("ParkingID");
					this.OnParkingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ParkingName
		{
			get
			{
				return this._ParkingName;
			}
			set
			{
				if ((this._ParkingName != value))
				{
					this.OnParkingNameChanging(value);
					this.SendPropertyChanging();
					this._ParkingName = value;
					this.SendPropertyChanged("ParkingName");
					this.OnParkingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal ParkingCost
		{
			get
			{
				return this._ParkingCost;
			}
			set
			{
				if ((this._ParkingCost != value))
				{
					this.OnParkingCostChanging(value);
					this.SendPropertyChanging();
					this._ParkingCost = value;
					this.SendPropertyChanged("ParkingCost");
					this.OnParkingCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parking_ParkingPlace", Storage="_ParkingPlaces", ThisKey="ParkingID", OtherKey="ParkingID")]
		public EntitySet<ParkingPlace> ParkingPlaces
		{
			get
			{
				return this._ParkingPlaces;
			}
			set
			{
				this._ParkingPlaces.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ParkingPlaces(ParkingPlace entity)
		{
			this.SendPropertyChanging();
			entity.Parking = this;
		}
		
		private void detach_ParkingPlaces(ParkingPlace entity)
		{
			this.SendPropertyChanging();
			entity.Parking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Benefits.MultisportPacketTypes")]
	public partial class MultisportPacketType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MultisportPacketTypeID;
		
		private string _MultisportPacketTypeName;
		
		private decimal _MultisportPacketTypeCost;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMultisportPacketTypeIDChanging(int value);
    partial void OnMultisportPacketTypeIDChanged();
    partial void OnMultisportPacketTypeNameChanging(string value);
    partial void OnMultisportPacketTypeNameChanged();
    partial void OnMultisportPacketTypeCostChanging(decimal value);
    partial void OnMultisportPacketTypeCostChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public MultisportPacketType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultisportPacketTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MultisportPacketTypeID
		{
			get
			{
				return this._MultisportPacketTypeID;
			}
			set
			{
				if ((this._MultisportPacketTypeID != value))
				{
					this.OnMultisportPacketTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MultisportPacketTypeID = value;
					this.SendPropertyChanged("MultisportPacketTypeID");
					this.OnMultisportPacketTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultisportPacketTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MultisportPacketTypeName
		{
			get
			{
				return this._MultisportPacketTypeName;
			}
			set
			{
				if ((this._MultisportPacketTypeName != value))
				{
					this.OnMultisportPacketTypeNameChanging(value);
					this.SendPropertyChanging();
					this._MultisportPacketTypeName = value;
					this.SendPropertyChanged("MultisportPacketTypeName");
					this.OnMultisportPacketTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultisportPacketTypeCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal MultisportPacketTypeCost
		{
			get
			{
				return this._MultisportPacketTypeCost;
			}
			set
			{
				if ((this._MultisportPacketTypeCost != value))
				{
					this.OnMultisportPacketTypeCostChanging(value);
					this.SendPropertyChanging();
					this._MultisportPacketTypeCost = value;
					this.SendPropertyChanged("MultisportPacketTypeCost");
					this.OnMultisportPacketTypeCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="General.TakingReasonTypes")]
	public partial class TakingReasonType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TakingReasonID;
		
		private string _TakingReasonName;
		
		private bool _IsActive;
		
		private EntitySet<ConfiguredMedicalPacketToEmployee> _ConfiguredMedicalPacketToEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTakingReasonIDChanging(int value);
    partial void OnTakingReasonIDChanged();
    partial void OnTakingReasonNameChanging(string value);
    partial void OnTakingReasonNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public TakingReasonType()
		{
			this._ConfiguredMedicalPacketToEmployees = new EntitySet<ConfiguredMedicalPacketToEmployee>(new Action<ConfiguredMedicalPacketToEmployee>(this.attach_ConfiguredMedicalPacketToEmployees), new Action<ConfiguredMedicalPacketToEmployee>(this.detach_ConfiguredMedicalPacketToEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakingReasonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TakingReasonID
		{
			get
			{
				return this._TakingReasonID;
			}
			set
			{
				if ((this._TakingReasonID != value))
				{
					this.OnTakingReasonIDChanging(value);
					this.SendPropertyChanging();
					this._TakingReasonID = value;
					this.SendPropertyChanged("TakingReasonID");
					this.OnTakingReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakingReasonName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TakingReasonName
		{
			get
			{
				return this._TakingReasonName;
			}
			set
			{
				if ((this._TakingReasonName != value))
				{
					this.OnTakingReasonNameChanging(value);
					this.SendPropertyChanging();
					this._TakingReasonName = value;
					this.SendPropertyChanged("TakingReasonName");
					this.OnTakingReasonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TakingReasonType_ConfiguredMedicalPacketToEmployee", Storage="_ConfiguredMedicalPacketToEmployees", ThisKey="TakingReasonID", OtherKey="TakingReasonID")]
		public EntitySet<ConfiguredMedicalPacketToEmployee> ConfiguredMedicalPacketToEmployees
		{
			get
			{
				return this._ConfiguredMedicalPacketToEmployees;
			}
			set
			{
				this._ConfiguredMedicalPacketToEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfiguredMedicalPacketToEmployees(ConfiguredMedicalPacketToEmployee entity)
		{
			this.SendPropertyChanging();
			entity.TakingReasonType = this;
		}
		
		private void detach_ConfiguredMedicalPacketToEmployees(ConfiguredMedicalPacketToEmployee entity)
		{
			this.SendPropertyChanging();
			entity.TakingReasonType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Benefits.Beneficiaries")]
	public partial class Beneficiary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BeneficiaryID;
		
		private string _BeneficiaryFName;
		
		private string _BeneficiaryLName;
		
		private string _BeneficiaryPesel;
		
		private System.DateTime _BeneficiaryBirthDate;
		
		private string _BeneficiaryCitizenship;
		
		private string _BeneficiarySex;
		
		private string _BeneficiaryPhoneNumber;
		
		private string _BeneficiaryEmailAddress;
		
		private int _BeneficiaryParentEmployeeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBeneficiaryIDChanging(int value);
    partial void OnBeneficiaryIDChanged();
    partial void OnBeneficiaryFNameChanging(string value);
    partial void OnBeneficiaryFNameChanged();
    partial void OnBeneficiaryLNameChanging(string value);
    partial void OnBeneficiaryLNameChanged();
    partial void OnBeneficiaryPeselChanging(string value);
    partial void OnBeneficiaryPeselChanged();
    partial void OnBeneficiaryBirthDateChanging(System.DateTime value);
    partial void OnBeneficiaryBirthDateChanged();
    partial void OnBeneficiaryCitizenshipChanging(string value);
    partial void OnBeneficiaryCitizenshipChanged();
    partial void OnBeneficiarySexChanging(string value);
    partial void OnBeneficiarySexChanged();
    partial void OnBeneficiaryPhoneNumberChanging(string value);
    partial void OnBeneficiaryPhoneNumberChanged();
    partial void OnBeneficiaryEmailAddressChanging(string value);
    partial void OnBeneficiaryEmailAddressChanged();
    partial void OnBeneficiaryParentEmployeeIdChanging(int value);
    partial void OnBeneficiaryParentEmployeeIdChanged();
    #endregion
		
		public Beneficiary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this.OnBeneficiaryIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryID = value;
					this.SendPropertyChanged("BeneficiaryID");
					this.OnBeneficiaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryFName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BeneficiaryFName
		{
			get
			{
				return this._BeneficiaryFName;
			}
			set
			{
				if ((this._BeneficiaryFName != value))
				{
					this.OnBeneficiaryFNameChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryFName = value;
					this.SendPropertyChanged("BeneficiaryFName");
					this.OnBeneficiaryFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryLName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BeneficiaryLName
		{
			get
			{
				return this._BeneficiaryLName;
			}
			set
			{
				if ((this._BeneficiaryLName != value))
				{
					this.OnBeneficiaryLNameChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryLName = value;
					this.SendPropertyChanged("BeneficiaryLName");
					this.OnBeneficiaryLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryPesel", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string BeneficiaryPesel
		{
			get
			{
				return this._BeneficiaryPesel;
			}
			set
			{
				if ((this._BeneficiaryPesel != value))
				{
					this.OnBeneficiaryPeselChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryPesel = value;
					this.SendPropertyChanged("BeneficiaryPesel");
					this.OnBeneficiaryPeselChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryBirthDate", DbType="DateTime NOT NULL")]
		public System.DateTime BeneficiaryBirthDate
		{
			get
			{
				return this._BeneficiaryBirthDate;
			}
			set
			{
				if ((this._BeneficiaryBirthDate != value))
				{
					this.OnBeneficiaryBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryBirthDate = value;
					this.SendPropertyChanged("BeneficiaryBirthDate");
					this.OnBeneficiaryBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryCitizenship", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BeneficiaryCitizenship
		{
			get
			{
				return this._BeneficiaryCitizenship;
			}
			set
			{
				if ((this._BeneficiaryCitizenship != value))
				{
					this.OnBeneficiaryCitizenshipChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryCitizenship = value;
					this.SendPropertyChanged("BeneficiaryCitizenship");
					this.OnBeneficiaryCitizenshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiarySex", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string BeneficiarySex
		{
			get
			{
				return this._BeneficiarySex;
			}
			set
			{
				if ((this._BeneficiarySex != value))
				{
					this.OnBeneficiarySexChanging(value);
					this.SendPropertyChanging();
					this._BeneficiarySex = value;
					this.SendPropertyChanged("BeneficiarySex");
					this.OnBeneficiarySexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryPhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BeneficiaryPhoneNumber
		{
			get
			{
				return this._BeneficiaryPhoneNumber;
			}
			set
			{
				if ((this._BeneficiaryPhoneNumber != value))
				{
					this.OnBeneficiaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryPhoneNumber = value;
					this.SendPropertyChanged("BeneficiaryPhoneNumber");
					this.OnBeneficiaryPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryEmailAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BeneficiaryEmailAddress
		{
			get
			{
				return this._BeneficiaryEmailAddress;
			}
			set
			{
				if ((this._BeneficiaryEmailAddress != value))
				{
					this.OnBeneficiaryEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryEmailAddress = value;
					this.SendPropertyChanged("BeneficiaryEmailAddress");
					this.OnBeneficiaryEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryParentEmployeeId", DbType="Int NOT NULL")]
		public int BeneficiaryParentEmployeeId
		{
			get
			{
				return this._BeneficiaryParentEmployeeId;
			}
			set
			{
				if ((this._BeneficiaryParentEmployeeId != value))
				{
					this.OnBeneficiaryParentEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryParentEmployeeId = value;
					this.SendPropertyChanged("BeneficiaryParentEmployeeId");
					this.OnBeneficiaryParentEmployeeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class fMultisportCardTypesResult
	{
		
		private int _MultisportPacketTypeID;
		
		private string _MultisportPacketTypeName;
		
		private decimal _MultisportPacketTypeCost;
		
		private bool _IsActive;
		
		public fMultisportCardTypesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultisportPacketTypeID", DbType="Int NOT NULL")]
		public int MultisportPacketTypeID
		{
			get
			{
				return this._MultisportPacketTypeID;
			}
			set
			{
				if ((this._MultisportPacketTypeID != value))
				{
					this._MultisportPacketTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultisportPacketTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MultisportPacketTypeName
		{
			get
			{
				return this._MultisportPacketTypeName;
			}
			set
			{
				if ((this._MultisportPacketTypeName != value))
				{
					this._MultisportPacketTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultisportPacketTypeCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal MultisportPacketTypeCost
		{
			get
			{
				return this._MultisportPacketTypeCost;
			}
			set
			{
				if ((this._MultisportPacketTypeCost != value))
				{
					this._MultisportPacketTypeCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	public partial class fParksWithFreePlacesResult
	{
		
		private int _ParkingID;
		
		private string _ParkingName;
		
		private decimal _ParkingCost;
		
		private bool _IsActive;
		
		public fParksWithFreePlacesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingID", DbType="Int NOT NULL")]
		public int ParkingID
		{
			get
			{
				return this._ParkingID;
			}
			set
			{
				if ((this._ParkingID != value))
				{
					this._ParkingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ParkingName
		{
			get
			{
				return this._ParkingName;
			}
			set
			{
				if ((this._ParkingName != value))
				{
					this._ParkingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal ParkingCost
		{
			get
			{
				return this._ParkingCost;
			}
			set
			{
				if ((this._ParkingCost != value))
				{
					this._ParkingCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	public partial class fMultisportOwnerToEmployeeResult
	{
		
		private int _ConfiguredBenefitPacketID;
		
		private string _MultisportPacketTypeName;
		
		private string _BeneficiaryFName;
		
		private string _BeneficiaryLName;
		
		public fMultisportOwnerToEmployeeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfiguredBenefitPacketID", DbType="Int NOT NULL")]
		public int ConfiguredBenefitPacketID
		{
			get
			{
				return this._ConfiguredBenefitPacketID;
			}
			set
			{
				if ((this._ConfiguredBenefitPacketID != value))
				{
					this._ConfiguredBenefitPacketID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultisportPacketTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MultisportPacketTypeName
		{
			get
			{
				return this._MultisportPacketTypeName;
			}
			set
			{
				if ((this._MultisportPacketTypeName != value))
				{
					this._MultisportPacketTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryFName", DbType="NVarChar(20)")]
		public string BeneficiaryFName
		{
			get
			{
				return this._BeneficiaryFName;
			}
			set
			{
				if ((this._BeneficiaryFName != value))
				{
					this._BeneficiaryFName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryLName", DbType="NVarChar(20)")]
		public string BeneficiaryLName
		{
			get
			{
				return this._BeneficiaryLName;
			}
			set
			{
				if ((this._BeneficiaryLName != value))
				{
					this._BeneficiaryLName = value;
				}
			}
		}
	}
	
	public partial class fBeneficiariesToEmployeeResult
	{
		
		private int _BeneficiaryID;
		
		private string _BeneficiaryFName;
		
		private string _BeneficiaryLName;
		
		private string _BeneficiaryPesel;
		
		private System.DateTime _BeneficiaryBirthDate;
		
		private string _BeneficiaryCitizenship;
		
		private string _BeneficiarySex;
		
		private string _BeneficiaryPhoneNumber;
		
		private string _BeneficiaryEmailAddress;
		
		private int _BeneficiaryParentEmployeeId;
		
		public fBeneficiariesToEmployeeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="Int NOT NULL")]
		public int BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this._BeneficiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryFName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BeneficiaryFName
		{
			get
			{
				return this._BeneficiaryFName;
			}
			set
			{
				if ((this._BeneficiaryFName != value))
				{
					this._BeneficiaryFName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryLName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BeneficiaryLName
		{
			get
			{
				return this._BeneficiaryLName;
			}
			set
			{
				if ((this._BeneficiaryLName != value))
				{
					this._BeneficiaryLName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryPesel", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string BeneficiaryPesel
		{
			get
			{
				return this._BeneficiaryPesel;
			}
			set
			{
				if ((this._BeneficiaryPesel != value))
				{
					this._BeneficiaryPesel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryBirthDate", DbType="DateTime NOT NULL")]
		public System.DateTime BeneficiaryBirthDate
		{
			get
			{
				return this._BeneficiaryBirthDate;
			}
			set
			{
				if ((this._BeneficiaryBirthDate != value))
				{
					this._BeneficiaryBirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryCitizenship", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BeneficiaryCitizenship
		{
			get
			{
				return this._BeneficiaryCitizenship;
			}
			set
			{
				if ((this._BeneficiaryCitizenship != value))
				{
					this._BeneficiaryCitizenship = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiarySex", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string BeneficiarySex
		{
			get
			{
				return this._BeneficiarySex;
			}
			set
			{
				if ((this._BeneficiarySex != value))
				{
					this._BeneficiarySex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryPhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BeneficiaryPhoneNumber
		{
			get
			{
				return this._BeneficiaryPhoneNumber;
			}
			set
			{
				if ((this._BeneficiaryPhoneNumber != value))
				{
					this._BeneficiaryPhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryEmailAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BeneficiaryEmailAddress
		{
			get
			{
				return this._BeneficiaryEmailAddress;
			}
			set
			{
				if ((this._BeneficiaryEmailAddress != value))
				{
					this._BeneficiaryEmailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryParentEmployeeId", DbType="Int NOT NULL")]
		public int BeneficiaryParentEmployeeId
		{
			get
			{
				return this._BeneficiaryParentEmployeeId;
			}
			set
			{
				if ((this._BeneficiaryParentEmployeeId != value))
				{
					this._BeneficiaryParentEmployeeId = value;
				}
			}
		}
	}
	
	public partial class vMedicalPacketsToEmployeeResult
	{
		
		private int _ConfiguredMedicalPacketID;
		
		private System.Nullable<int> _BeneficiaryGroupID;
		
		private System.Nullable<bool> _IsPayedByEmployee;
		
		private System.DateTime _ValidFrom;
		
		private string _MedicalPacketName;
		
		public vMedicalPacketsToEmployeeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfiguredMedicalPacketID", DbType="Int NOT NULL")]
		public int ConfiguredMedicalPacketID
		{
			get
			{
				return this._ConfiguredMedicalPacketID;
			}
			set
			{
				if ((this._ConfiguredMedicalPacketID != value))
				{
					this._ConfiguredMedicalPacketID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryGroupID", DbType="Int")]
		public System.Nullable<int> BeneficiaryGroupID
		{
			get
			{
				return this._BeneficiaryGroupID;
			}
			set
			{
				if ((this._BeneficiaryGroupID != value))
				{
					this._BeneficiaryGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPayedByEmployee", DbType="Bit")]
		public System.Nullable<bool> IsPayedByEmployee
		{
			get
			{
				return this._IsPayedByEmployee;
			}
			set
			{
				if ((this._IsPayedByEmployee != value))
				{
					this._IsPayedByEmployee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidFrom", DbType="DateTime NOT NULL")]
		public System.DateTime ValidFrom
		{
			get
			{
				return this._ValidFrom;
			}
			set
			{
				if ((this._ValidFrom != value))
				{
					this._ValidFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalPacketName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MedicalPacketName
		{
			get
			{
				return this._MedicalPacketName;
			}
			set
			{
				if ((this._MedicalPacketName != value))
				{
					this._MedicalPacketName = value;
				}
			}
		}
	}
	
	public partial class vBeneficiaries2MedPackResult
	{
		
		private int _BeneficiaryID;
		
		private string _BeneficiaryFName;
		
		private string _BeneficiaryLName;
		
		private System.DateTime _AssignDate;
		
		public vBeneficiaries2MedPackResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="Int NOT NULL")]
		public int BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					this._BeneficiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryFName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BeneficiaryFName
		{
			get
			{
				return this._BeneficiaryFName;
			}
			set
			{
				if ((this._BeneficiaryFName != value))
				{
					this._BeneficiaryFName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryLName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BeneficiaryLName
		{
			get
			{
				return this._BeneficiaryLName;
			}
			set
			{
				if ((this._BeneficiaryLName != value))
				{
					this._BeneficiaryLName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignDate
		{
			get
			{
				return this._AssignDate;
			}
			set
			{
				if ((this._AssignDate != value))
				{
					this._AssignDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
